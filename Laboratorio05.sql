/*
Ciclo1: Tablas
*/
CREATE TABLE Personas(
    id NUMBER(9,0) NOT NULL,
    tipo VARCHAR2(2) NOT NULL,
    numero VARCHAR2(10) NOT NULL,
    nombre VARCHAR2(50) NOT NULL,
    registro DATE NOT NULL,
    celular NUMBER(10) NOT NULL,
    correo VARCHAR2(50) NOT NULL
);

CREATE TABLE Clientes(
    id NUMBER(9,0) NOT NULL,
    idioma VARCHAR2(10) NOT NULL
);

CREATE TABLE POSICIONES(
    ID VARCHAR2(10) NOT NULL,
    LONGITUD NUMBER(3,2) NOT NULL,
    LATITUD NUMBER(3,2) NOT NULL
);

CREATE TABLE SOLICITUDES(
    CODIGO NUMBER(9,0) NOT NULL,
    FECHA_CREACION TIMESTAMP NOT NULL,
    FECHA_VIAJE TIMESTAMP,
    PLATAFORMA CHAR NOT NULL,
    PRECIO NUMBER(5),
    ESTADO CHAR NOT NULL,
    CLIENTE NUMBER(9,0) NOT NULL,
    UBICACION_INICIAL VARCHAR2(10) NOT NULL,
    UBICACION_FINAL VARCHAR2(10) NOT NULL
);

CREATE TABLE REQUERIMIENTOS(
    REQUERIMIENTO VARCHAR2(15) NOT NULL,
    SOLICITUD NUMBER(9,0) NOT NULL
);

CREATE TABLE TARJETAS_POR_CLIENTE(
    tarjeta NUMBER(15,0) NOT NULL,
    CLIENTE NUMBER(9,0) NOT NULL
);

CREATE TABLE TARJETAS(
    numero NUMBER(15,0) NOT NULL,    
    ENTIDAD VARCHAR2(10) NOT NULL,
    VENCIMIENTO DATE NOT NULL
);


CREATE TABLE PQRSS(
    TICKED VARCHAR2(20) NOT NULL,
    RADICACION DATE NOT NULL,
    CIERRE DATE,
    DESCRIPCION VARCHAR2(255),
    TIPO CHAR NOT NULL,
    ESTADO VARCHAR2(50) NOT NULL,
    SOLICITUD NUMBER(9,0) NOT NULL
);

CREATE TABLE ANEXOS(
    ID VARCHAR2(10) NOT NULL,
    PQRS VARCHAR2(13) NOT NULL,
    NOMBRE VARCHAR2(20) NOT NULL,
    URL VARCHAR2(100) NOT NULL
);

CREATE TABLE VEHICULOS(
    PLACA VARCHAR2(30) NOT NULL,
    CONDUCTOR NUMBER(9,0),
    A_O NUMBER(4,0) NOT NULL,
    TIPO CHAR NOT NULL,
    ESTADO CHAR NOT NULL,
    PUERTAS NUMBER(3,0),
    PASAJEROS NUMBER(3,0),
    CARGA NUMBER(3,0)
);

CREATE TABLE CONDUCTORES(
    id NUMBER(9,0) NOT NULL,
    licencia VARCHAR2(10) NOT NULL,
    fechaNacimiento DATE NOT NULL,
    estrellas NUMBER(1,0) NOT NULL,
    estado CHAR NOT NULL
);

CREATE TABLE PQRSRESPUESTAS(
    TICKED VARCHAR2(13) NOT NULL,
    fecha DATE NOT NULL,
    descripcion VARCHAR2(50) NOT NULL,
    nombre VARCHAR2(20)NOT NULL,
    correo VARCHAR2(50) NOT NULL,
    comentario VARCHAR2(20),
    evaluacion NUMBER(1,0)
);

/*Ciclo1: Primarias*/
ALTER TABLE TARJETAS
ADD CONSTRAINT PK_Tarjetas PRIMARY KEY (numero);

ALTER TABLE TARJETAS_POR_CLIENTE
ADD CONSTRAINT PK_TarjetasPorCLiente PRIMARY KEY (TARJETA,CLIENTE);

ALTER TABLE CLIENTES
ADD CONSTRAINT PK_Cliente PRIMARY KEY (ID);

ALTER TABLE SOLICITUDES
ADD CONSTRAINT PK_Solicitud PRIMARY KEY (CODIGO);

ALTER TABLE REQUERIMIENTOS
ADD CONSTRAINT PK_Requerimiento PRIMARY KEY (REQUERIMIENTO, SOLICITUD);

ALTER TABLE POSICIONES
ADD CONSTRAINT PK_Posicion PRIMARY KEY(ID);

ALTER TABLE PQRSS
ADD CONSTRAINT PK_PQRS PRIMARY KEY (TICKED);

ALTER TABLE ANEXOS
ADD CONSTRAINT PK_Anexo PRIMARY KEY (ID);

ALTER TABLE VEHICULOS
ADD CONSTRAINT PK_Vehiculos PRIMARY KEY (PLACA);

ALTER TABLE PERSONAS
ADD CONSTRAINT PK_Persona PRIMARY KEY (ID);

ALTER TABLE CONDUCTORES
ADD CONSTRAINT PK_Conductor PRIMARY KEY (id);

ALTER TABLE PQRSRESPUESTAS
ADD CONSTRAINT PK_Respuestas PRIMARY KEY (ticked);
/*CICLO 1: UNICAS*/

ALTER TABLE PERSONAS 
ADD CONSTRAINT UC_Persona UNIQUE (TIPO,NUMERO);

ALTER TABLE ANEXOS
ADD CONSTRAINT UC_Anexo UNIQUE (URL);

/*CICLO 1: FORÁNEAS*/

ALTER TABLE TARJETAS_POR_CLIENTE
ADD CONSTRAINT FK_TarjetasPorCliente_IDCliente
FOREIGN KEY (CLIENTE) REFERENCES CLIENTES(ID);

ALTER TABLE TARJETAS_POR_CLIENTE
ADD CONSTRAINT FK_TarjetasPorCliente_NumeroTarjeta
FOREIGN KEY (TARJETA) REFERENCES TARJETAS(numero);

ALTER TABLE CLIENTES
ADD CONSTRAINT FK_Clientes_IDPersona
FOREIGN KEY (ID) REFERENCES PERSONAS(ID);

ALTER TABLE SOLICITUDES
ADD CONSTRAINT FK_Solicitudes_IDCliente
FOREIGN KEY (CLIENTE) REFERENCES CLIENTES(ID);

ALTER TABLE SOLICITUDES
ADD CONSTRAINT FK_Solicitudes_IDInicio
FOREIGN KEY (UBICACION_INICIAL) REFERENCES POSICIONES(ID);

ALTER TABLE SOLICITUDES
ADD CONSTRAINT FK_Solicitudes_IDFinal
FOREIGN KEY (UBICACION_FINAL) REFERENCES POSICIONES(ID);

ALTER TABLE REQUERIMIENTOS
ADD CONSTRAINT FK_Requerimientos_Solicitud
FOREIGN KEY (SOLICITUD) REFERENCES SOLICITUDES(CODIGO);

ALTER TABLE PQRSS
ADD CONSTRAINT FK_PQRSS_Solicitud
FOREIGN KEY (SOLICITUD) REFERENCES SOLICITUDES(CODIGO);

ALTER TABLE ANEXOS
ADD CONSTRAINT FK_Anexos_PQRSS
FOREIGN KEY (PQRS) REFERENCES PQRSS(TICKED);

ALTER TABLE VEHICULOS
ADD CONSTRAINT FK_Vehiculos_Conductor
FOREIGN KEY (conductor) REFERENCES CONDUCTORES (id);

ALTER TABLE PQRSRESPUESTAS
ADD CONSTRAINT FK_Respuestas_PQRS
FOREIGN KEY (ticked) REFERENCES PQRSS(ticked);

ALTER TABLE CONDUCTORES
ADD CONSTRAINT FK_Conductores_IDPersona
FOREIGN KEY (id) REFERENCES PERSONAS(id);

/*Ciclo 1: Atributos*/

ALTER TABLE PERSONAS
ADD CONSTRAINT CHK_Personas_tipo CHECK (tipo = 'TI' OR tipo = 'CC' OR tipo = 'CE' OR tipo = 'PS');

ALTER TABLE CONDUCTORES
ADD CONSTRAINT CHK_Conductores_Estrellas CHECK (1 <= estrellas AND estrellas <= 5);

ALTER TABLE CONDUCTORES
ADD CONSTRAINT CHK_Conductores_Estado CHECK (estado = 'A' OR estado = 'I' OR estado = 'R' OR estado = 'O');

ALTER TABLE VEHICULOS
ADD CONSTRAINT CHK_Vehiculos_tipo CHECK (tipo = 'C' OR tipo = 'M');

ALTER TABLE VEHICULOS
ADD CONSTRAINT CHK_Vehiculos_estado CHECK (estado = 'A' OR estado = 'I' OR estado = 'O');

ALTER TABLE VEHICULOS
ADD CONSTRAINT CHK_Vehiculos_puertas CHECK (puertas > 0);

ALTER TABLE VEHICULOS
ADD CONSTRAINT CHK_Vehiculos_pasajeros CHECK (pasajeros > 0);

ALTER TABLE VEHICULOS
ADD CONSTRAINT CHK_Vehiculos_carga CHECK (carga > 0);

ALTER TABLE SOLICITUDES
ADD CONSTRAINT CHK_Solicitudes_Precio CHECK (MOD(precio, 100) = 0);

ALTER TABLE SOLICITUDES
ADD CONSTRAINT CHK_Solicitudes_Estado CHECK (estado = 'P' OR estado = 'A' OR estado = 'C' OR estado = 'F');

ALTER TABLE SOLICITUDES
ADD CONSTRAINT CHK_Solicitudes_Plataforma CHECK (plataforma = 'A' OR plataforma = 'W');

ALTER TABLE REQUERIMIENTOS
ADD CONSTRAINT CHK_Requerimientos_Requerimiento CHECK (requerimiento = 'MUSICA' OR requerimiento = 'RUTA' OR requerimiento = 'IDIOMA');

ALTER TABLE PQRSS
ADD CONSTRAINT CHK_PQRSS_Ticked CHECK (REGEXP_LIKE(TICKED,'^([A-Z])([0-9]{12})$'));

ALTER TABLE PQRSS
ADD CONSTRAINT CHK_PQRSS_Tipo CHECK (tipo = 'P' OR tipo = 'Q' OR tipo = 'R' OR tipo = 'S');

ALTER TABLE PQRSS
ADD CONSTRAINT CHK_PQRSS_Estado CHECK (estado = 'ABIERTO' OR estado = 'ATENDIDA' OR estado = 'RECHAZADA' OR estado = 'CANCELADA');

ALTER TABLE ANEXOS
ADD CONSTRAINT CHK_Anexos_Url CHECK (URL LIKE('https://%'));

ALTER TABLE PQRSRESPUESTAS
ADD CONSTRAINT CHK_Respuestas_Correo CHECK (LENGTH(CORREO) - LENGTH(REPLACE(CORREO,'.','')) = 2 AND (REGEXP_LIKE(CORREO,'^[^\s@]+@[^\s@]$') OR (REGEXP_LIKE(CORREO,'^[^\s@]+@[^\s@]+\.[^\s@.]$'))));

ALTER TABLE PQRSRESPUESTAS
ADD CONSTRAINT CHK_Respuestas_Evalucacion CHECK (1 <= evaluacion AND evaluacion <= 5);

/*LAB05*/

SELECT * FROM mbda.data;
INSERT INTO mbda.data(EMAIL,CEDULA,CELULAR,NOMBRES) VALUES('camilo.castano-q@mail.escuelaing.edu.co','1000271422','3183074075','Camilo Castaño');

DELETE FROM mbda.data WHERE nombres = 'Camilo Castaño';

UPDATE mbda.data
SET nombres = 'CC'
WHERE nombres= 'Camilo Castaño';

SELECT COUNT(*) FROM mbda.data;


INSERT INTO PERSONAS select * from(
WITH conteo AS (SELECT cedula AS C,COUNT(CEDULA) as unic from mbda.data GROUP BY cedula HAVING COUNT(CEDULA) = 1)
SELECT SUBSTR(cedula,1,6) || TRUNC(DBMS_RANDOM.VALUE(100,999)) AS ID, 'CC' AS TIPO, CEDULA AS NUMERO, NOMBRES AS NOMBRE, trunc(SYSDATE) AS REGISTRO, CELULAR, EMAIL AS CORREO
FROM MBDA.DATA
where(MBDA.DATA.CEDULA IN (SELECT C FROM CONTEO)) and NOT (EMAIL IS NULL AND CEDULA IS NULL AND CELULAR IS NULL AND MBDA.DATA.NOMBRES IS NULL ));





